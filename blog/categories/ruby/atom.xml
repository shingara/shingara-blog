<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Shiny happy people coding]]></title>
  <link href="http://blog.shingara.fr//blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.shingara.fr//"/>
  <updated>2012-04-20T11:49:17+02:00</updated>
  <id>http://blog.shingara.fr//</id>
  <author>
    <name><![CDATA[Cyril Mougel]]></name>
    <email><![CDATA[cyril.mougel@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Récupération de ses fichiers sur basecamp]]></title>
    <link href="http://blog.shingara.fr//telecharger-fichier-de-basecamp.html"/>
    <updated>2012-04-20T09:38:00+02:00</updated>
    <id>http://blog.shingara.fr//telecharger-fichier-de-basecamp</id>
    <content type="html"><![CDATA[<p>Au niveau de mon travail actuel chez <a href="http://bemyboat.com">Be My Boat</a>,
nous sommes actuellement en train de migrer de
<a href="http://basecamphq.com">Basecamp</a> vers
<a href="http://trello.com">Trello</a>.</p>

<p>Pour éviter de perdre toutes les informations qui ont été mis dans
basecamp, nous avons réalisé un import complet. Par contre, l'import ne
comprend pas les fichiers qui ont pu être ajouté dans basecamp.</p>

<p>Pour ne pas perdre ces fichiers qui font parti du patrimoine de
l'entreprise, j'ai créé un petit script pour télécharger tous ces
fichiers.</p>

<p>Je vous le partage si vous en avez besoin un jour.</p>

<p><div><script src='https://gist.github.com/2420838.js?file='></script>
<noscript><pre><code>require 'faraday'
require 'faraday_middleware'

project_id = 3684800

class Attachment

  def initialize(conn, attachment)
    @conn = conn
    @attachment = attachment
  end

  def collection
    @attachment['collection'].to_s
  end

  def dir
    Dir.mkdir(collection) unless Dir.exists?(collection)
    collection
  end

  def execute
    File.new(File.join(dir, @attachment['name']), 'w').write(@conn.get(@attachment['download_url']).body)
  end
end

con = Faraday.new(:url =&gt; 'https://ciblonet.basecamphq.com') do |builder|
  builder.use Faraday::Request::BasicAuthentication, 'shingara', ''
  builder.use Faraday::Response::Logger
  builder.response :xml,  :content_type =&gt; /\bxml$/
  builder.use Faraday::Adapter::NetHttp
end
attachment_size = 100

  attachments = con.get(&quot;/projects/#{project_id}/attachments.xml&quot;) do |req|
    req.headers['Accept'] = 'application/xml'
    req.headers['Content-Type'] = 'application/xml'
  end.body['attachments']

  attachments.each do |attachment|
    Attachment.new(con, attachment).execute
  end

while attachments.size &gt; 99
  attachments = con.get(&quot;/projects/#{project_id}/attachments.xml?n=#{attachment_size}&quot;) do |req|
    req.headers['Accept'] = 'application/xml'
    req.headers['Content-Type'] = 'application/xml'
  end.body['attachments']

  attachments.each do |attachment|
    Attachment.new(con, attachment).execute
  end
  attachment_size += 100
end
</code></pre></noscript></div>
</p>

<p>Dans ce script j'utilise
<a href="https://github.com/technoweenie/faraday">Faraday</a> pour faire le requêtage avec l'API et
aussi télécharger les fichiers. Je suis personnellement un grand fan de
Faraday. C'est selon moi la meilleure librairie de requêtage HTTP
actuelle du monde Ruby. Utilisez la dès que vous avez besoin de faire du
requêtage HTTP.</p>
]]></content>
  </entry>
  
</feed>
